<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>